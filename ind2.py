#! / usr / bin / env python3
# - * - кодировка: utf-8 - * -

# Вариант 7.Использовать словарь, следующие ключи: название пункта назначения; номер
# поезда; время отправления. Написать программу, выполняющую следующие действия:
# ввод с клавиатуры данных в список, состоящий из слов заданной структуры; записи должны
# быть упорядочены по времени отправления поездов;
# вывод на экран информации о поезде, номер которого введен с клавиатуры; если таких поездов нет,
# выдать на дисплей в соответствующем сообщении.

import  sys
импортировать  json


если  __name__  ==  '__main__' :

    поезда  = []

    в то время как  True :
        команда  =  вход ( ">>>" ). нижний ()

        если  команда  ==  'выход' :
            перемена
         Команда  elif ==  'добавить' :
            name  =  input ( "Название пункта назначения:" )
            num  =  int ( input ( "Номер поезда:" ))
            time  =  input ( "Время отправления:" )

            train  = {
                'name' : имя ,
                "число" : число ,
                'время' : время ,
            }

            поезда . добавить ( поезд )
            если  len ( поезда ) >  1 :
                поезда . sort ( key = lambda  item : item . get ( "time" ))

         Команда  elif ==  'список' :
            line  =  '+ - {} - + - {} - + - {} - + - {} - +' . формат (
                '-'  *  4 ,
                '-'  *  30 ,
                '-'  *  20 ,
                '-'  *  17
            )
            печать ( строка )
            печать (
                '| {: ^ 4} | {: ^ 30} | {: ^ 20} | {: ^ 17} | ' . формат (
                    «№» ,
                    "Пункт назначения" ,
                    "Номер поезда" ,
                    "Время отправления"
                )
            )
            печать ( строка )

            для  IDX , поезд  в  Перечислять ( поезд , 1 ):
                печать (
                    '| {:> 4} | {: <30} | {: <20} | {:> 17} | ' . формат (
                        idx ,
                        поезд . получить ( 'имя' , '' ),
                        поезд . получить ( 'число' , 0 ),
                        поезд . получить ( 'время' , '' )
                    )
                )

            печать ( строка )

         команда elif . начинается с ( 'выбрать' ):

            части  =  команда . split ( '' , maxsplit = 2 )

            число  =  int ( части [ 1 ])

            count  =  0
            для  поезда  в  поездах :
                если  поезд . get ( 'num' ) ==  число :
                    count  + =  1
                    print ( 'Номер поезда:' , train . get ( 'num' , 0 ))
                    print ( 'Пункт назначения:' , train . get ( 'name' , '' ))
                    print ( 'Время отправления:' , train . get ( 'time' , '' ))

            если  count  ==  0 :
                print ( "Таких поездов нет!" )

         команда elif . начинается с ( 'загрузка' ):
            # Разбить команду на части для выделения имени.
            части  =  команда . split ( '' , maxsplit = 1 )

            # Прочитать данные из файла JSON.
            с  открытыми ( частями [ 1 ], 'r' ) как  f :
                поезда  =  json . нагрузка ( f )

         команда elif . начинается с ( 'сохранить' ):
            # Разбить команду на части для выделения имени.
            части  =  команда . split ( '' , maxsplit = 1 )

            # Сохранить данные в файл JSON.
            с  open ( parts [ 1 ], 'w' ) как  f :
                json . свалка ( поезда , ж )

         Команда  elif ==  'help' :
            print ( "Список команд: \ n " )
            print ( "добавить - поезд;" )
            print ( "список - вывести список поездов;" )
            print ( "выбрать <номер поезда> - запросить информацию о выбранном поезде;" )
            print ( "помощь - отображить справку;" )
            print ( "load <имя файла> - загрузить данные из файла;" )
            print ( "сохранить <имя файла> - сохранить данные в файл;" )
            print ( «exit - завершить работу с программой.» )
        еще :
            print ( f "Неизвестная команда { команда } " , file = sys . stderr )